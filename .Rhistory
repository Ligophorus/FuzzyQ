library (devtools)
install.packages (devtools)
install.packages ("fs")
library (devtools)
install.packages ("ellipsis")
library (devtools)
install.packages ("processx")
library (devtools)
install.packages ("ps")
library (devtools)
install.packages ("pkgload")
library (devtools)
build()
install()
library (devtools)
build()
install()
build()
install()
lintr::lint_package()
library(lintr)
install.packages("lintr")
lintr::lint_package()
library (devtools)
build()
install()
lintr::lint_package()
library (devtools)
build()
install()
ls("package:FuzzyQ")
library (FuzzyQ)
ls("package:FuzzyQ")
fuzzyqCI
build()
library (devtools)
build()
install()
ls("package:FuzzyQ")
fuzzyqCI
library (devtools)
build()
install()
?FuzzyQ
library(devtools)
library(roxygen2)
class("gower")
devtools::document()
devtools::document()
class (1:2)
class c(1,2)
class (c(1,2))
?plot
devtools::document()
library(paco)
?PACo
?ape
library(ape)
?rtree
library(devtools)
build()
install()
?fuzzyq
library(FuzzyQ)
?fuzzyq
devtools::document()
build()
install()
library(FuzzyQ)
?fuzzyq
devtools::document()
install_github("Ligophorus/FuzzyQ")
library(FuzzyQ)
?fuzzyq
devtools::document()
install_github("Ligophorus/FuzzyQ")
library(FuzzyQ)
?fuzzyq
devtools::document()
install_github("Ligophorus/FuzzyQ")
library(FuzzyQ)
?fuzzyq
devtools::document()
devtools::document()
devtools::document()
library(devtools)
devtools::document()
install_github("Ligophorus/FuzzyQ")
library(FuzzyQ)
?fuzzyq
devtools::document()
install_github("Ligophorus/FuzzyQ")
library(FuzzyQ)
?fuzzyq
devtools::document()
install_github("Ligophorus/FuzzyQ")
library(FuzzyQ)
?fuzzyq
devtools::check(buil_args='--as-cran')
devtools::check(build_args='--as-cran')
data(antsA)
FQAnts <- fuzzyq(antsA, sorting = TRUE)
?AOplot
AOplot(FQAnts) # Plor with default values
# Alternative with colors specified in Hex format, logarithmic axes and other point format
AOplot(FQAnts, col.rc = c("#013bad","#bd5f69"),
log.x = TRUE, log.y = TRUE, pch = 4)
?sortClus
Nboot = 1e3
BS.FQAnts <- fuzzyqBoot (antsA, Nboot, level='spp')
BS.FQAnts <- fuzzyqCI(BS.FQAnts, fq=FQAnts)
# Plot Commonness Indices and their respective confidence intervals:
BS.FQAnts <- sortClus(BS.FQAnts, FQAnts)
spp <- FQAnts$spp
plot(spp[,3], cex.axis=0.8, xaxt='n', ylab="Commoness index",
ylim=c(0, max(BS.FQAnts)), xlab="Species",col=col.RC[spp[,1]+1],
pch=16, cex=0.8, las = 1)
ebar.int <- seq_len(nrow(spp))
arrows(ebar.int, BS.FQAnts["Lower", ], ebar.int, BS.FQAnts["Upper", ],
length= 0, col=col.RC[spp[,1]+1])
axis(1, at=ebar.int, labels=rownames(spp), las=2, cex.axis=0.6)
?fuzzyqBoot
BS.FQAnts <- fuzzyqBoot (antsA, N = 1e3, level='spp')
BS.global <- fuzzyqBoot (antsA, N = 1e3, level='global')
?fuzzyqCI
library (FuzzyQ)
?fuzzyq
library(devtools)
devtools::document()
devtools::document()
